stages:
  - check
  - test
  - run
  - build
  - deploy

include:
  - template: Code-Quality.gitlab-ci.yml

image: docker:19.03.12

services:
  - docker:19.03.12-dind

syntax_check:
  stage: check
  image: python:2.7-slim
  script:
    - pip install pylint
    - pylint *.py --confidence=INFERENCE
  allow_failure: true
  only:
    refs:
      - develop
  except:
    changes:
      - "README.md"

code_quality:
  stage: test
  image: docker:stable
  variables:
    REPORT_FORMAT: html
  artifacts:
    reports:
      codequality: gl-code-quality-report.html
  rules:
    - if: '$CI_COMMIT_BRANCH == "develop"'

unit_test:
  stage: test
  image: python:2.7-slim
  script:
    - python unittest_handle404.py
  only:
    refs:
      - develop
  except:
    changes:
      - "README.md"

run_script:
  stage: run
  image: python:2.7-slim
  before_script:
    - echo $MAC_ADDR
  script:
    - python macapi.py $API_KEY $MAC_ADDR
  only:
    refs:
      - develop
  except:
    changes:
      - "README.md"

build_docker_image:
  stage: build
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD registry.gitlab.com
    - docker build -t registry.gitlab.com/lok.bruce/query-mac-api .
    - docker push registry.gitlab.com/lok.bruce/query-mac-api:latest
  only:
    refs:
      - develop
  except:
    changes:
      - "README.md"

run container:
  stage: deploy
  before_script:
    - echo $MAC_ADDR
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD registry.gitlab.com
    - docker run --rm registry.gitlab.com/lok.bruce/query-mac-api:latest $API_KEY $MAC_ADDR
  only:
    refs:
      - master
  except:
    changes:
      - "README.md"
